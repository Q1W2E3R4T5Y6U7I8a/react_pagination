{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","handlePageChange","page","className","href","onClick","Array","from","length","_","index","items","to","numbers","n","push","getNumbers","map","App","useState","setCurrentPage","setPerPage","startIndex","endIndex","currentItems","slice","min","id","value","onChange","event","parseInt","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yKASaA,EAAwC,SAAC,GAK/C,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAE/BM,EAAmB,SAACC,GACpBA,IAASN,GACXC,EAAaK,IAIjB,OACE,8BACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAA+B,IAAhBP,EAAoB,WAAa,IAA7D,SACE,mBACE,UAAQ,WACRO,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBR,EAAoB,OAAS,QAC5CS,QAAS,kBAAMJ,EAAiBL,EAAc,EAC1CA,EAAc,EACdA,IAPN,oBAaDU,MAAMC,KAAK,CAAEC,OAAQV,IAAc,SAACW,EAAGC,GAAJ,OAClC,oBAEEP,UAAS,oBAAeP,IAAgBc,EAAQ,EAAI,SAAW,IAFjE,SAIE,mBACE,UAAQ,WACRP,UAAU,YACVC,KAAI,WAAMM,EAAQ,GAClBL,QAAS,kBAAMJ,EAAiBS,EAAQ,IAJ1C,SAMGA,EAAQ,KATNA,EAAQ,MAcjB,oBAAIP,UAAS,oBAAeP,IAAgBE,EAAa,WAAa,IAAtE,SACE,mBACE,UAAQ,WACRK,UAAU,YACVC,KAAK,QACL,gBAAeR,IAAgBE,EAAa,OAAS,QACrDO,QAAS,kBAAMJ,EAAiBL,EAAcE,EAC1CF,EAAc,EACdA,IAPN,0BCrDGe,ECJN,SAAoBJ,EAAcK,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIP,EAAMO,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDHYG,CAAW,EAAG,IAAIC,KAAI,SAACH,GAAD,qBAAeA,MAE7CI,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOvB,EAAP,KAAoBwB,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOxB,EAAP,KAAgB0B,EAAhB,KAWMC,GAAc1B,EAAc,GAAKD,EACjC4B,EAAWD,EAAa3B,EACxB6B,EAAeb,EAAMc,MAAMH,EAAYC,GAE7C,OACE,sBAAKpB,UAAU,YAAf,UACE,uDAEA,cAAC,EAAD,CACET,MAAOiB,EAAMH,OACbb,QAASA,EACTC,YAAaA,EACbC,aArBe,SAACK,GACpBkB,EAAelB,MAuBb,oBAAGC,UAAU,OAAO,UAAQ,OAA5B,iBAEG,IACAP,EACA,IAJH,SAMG,IACA0B,EAAa,EACb,IARH,IAUG,IACAvB,KAAK2B,IAAIH,EACRZ,EAAMH,QACP,IAbH,KAeG,IACAG,EAAMH,OAhBT,OAoBA,sBAAKL,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAOjC,EACPkC,SA/CkB,SAACC,GAC3BT,EAAWU,SAASD,EAAME,OAAOJ,MAAO,KACxCR,EAAe,IAwCT,UAOE,wBAAQQ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB9B,UAAU,qBAA3C,+BAKF,6BACGqB,EAAaP,KAAI,SAACiB,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YE1EnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.09e13eeb.chunk.js","sourcesContent":["import React from 'react';\n\ninterface PaginationProps {\n  total: number;\n  perPage: number;\n  currentPage?: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n\n  const handlePageChange = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <div>\n      <ul className=\"pagination\">\n        <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1 ? 'true' : 'false'}\n            onClick={() => handlePageChange(currentPage > 1\n              ? currentPage - 1\n              : currentPage)}\n          >\n            «\n          </a>\n        </li>\n\n        {Array.from({ length: totalPages }, (_, index) => (\n          <li\n            key={index + 1}\n            className={`page-item ${currentPage === index + 1 ? 'active' : ''}`}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${index + 1}`}\n              onClick={() => handlePageChange(index + 1)}\n            >\n              {index + 1}\n            </a>\n          </li>\n        ))}\n\n        <li className={`page-item ${currentPage === totalPages ? 'disabled' : ''}`}>\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === totalPages ? 'true' : 'false'}\n            onClick={() => handlePageChange(currentPage < totalPages\n              ? currentPage + 1\n              : currentPage)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nexport const items = getNumbers(1, 42).map((n) => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(parseInt(event.target.value, 10));\n    setCurrentPage(1); // Reset to the first page when changing items per page\n  };\n\n  const startIndex = (currentPage - 1) * perPage;\n  const endIndex = startIndex + perPage;\n  const currentItems = items.slice(startIndex, endIndex);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page\n        {' '}\n        {currentPage}\n        {' '}\n        (items\n        {' '}\n        {startIndex + 1}\n        {' '}\n        -\n        {' '}\n        {Math.min(endIndex,\n          items.length)}\n        {' '}\n        of\n        {' '}\n        {items.length}\n        )\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <ul>\n        {currentItems.map((item) => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}